swagger: '2.0'
info:
  description: This is a simple API to manage the exchange of information required to set up multi-party asset swap transactions between nodes of a Chain Core network.
  version: 0.0.1
  title: BlockEx API
  # put the contact info for your development or API team
  contact:
    email: garyd@bankservafrica.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html



# Added by API Auto Mocking Plugin
# host: virtserver.swaggerhub.com
host: localhost:8080
# Added by API Auto Mocking Plugin
basePath: /BlockEx/0.0.1


schemes:
- https
produces:
  - application/json
consumes:
  - application/json
  
# tags are used for organizing operations
tags:
  - name: AppIO
    description: |
      The AppIO controller defines paths that deal with the logic of the app
      
      * **trades**: management of view, placing and accepting trades in the system.
      * **users**: manage app user info.
      
  - name: ChainIO
    description: |
      The ChainIO controller handles operations to the Chain Core nodes using the Chain-SDK
      
      The users local app stores and provides the connection information as required.
    
      * **accounts**    : list accounts
      * **account**     : create account
      * **assets**      : list assets
      * **keys**        : list keys
      * **key**         : create key
      * **transactions**: list transactions
      * **sign**        : submit transactions
      
paths:


# AppIO Paths
  /app/trades:
    get:
      description: List Trades posted in the system
      operationId: getTrades
      tags: 
      - AppIO
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Trade'
        400:
          description: bad input parameter
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              error:
                properties:
                  message:
                    type: string
          
    post:
      description: Adds a new Trade Offer Item to the system
      operationId: postTrade
      tags: 
      - AppIO
      parameters:
      - in: body
        name: offerItem
        description: Offer item to add to the system
        schema:
          $ref: '#/definitions/TradeItem'
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Trade'
        400:
          description: invalid input, object invalid
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              error:
                properties:
                  message:
                    type: string
        409:
          description: an existing item already exists
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              error:
                properties:
                  message:
                    type: string
          
    put:
      description: Updates an Offer Item
      operationId: updateTrade
      tags: 
      - AppIO
      parameters:
      - in: body
        name: offerItem
        description: Offer to be updated
        schema:
          $ref: '#/definitions/TradeItem'
      responses:
        201:
          description: item updated
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Trade'
        400:
          description: invalid input, object invalid
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              error:
                properties:
                  message:
                    type: string
        409:
          description: an existing item already exists
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              error:
                properties:
                  message:
                    type: string         

  
  /app/trades/{tradeId}:
    parameters:
      - name: tradeId
        description: Id of trade to work with
        in: path
        type: integer
        format: integer
        required: true
        
    get:
      description: Gets specified trade details
      operationId: getTrade
      tags: 
      - AppIO
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Trade'
        400:
          description: bad input parameter
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              error:
                properties:
                  message:
                    type: string
                 
    delete:
      description: Delete the specified trade from the system unless it has been completed
      operationId: deleteTrade
      tags: 
      - AppIO
      responses:
        200:
          description: item deleted confirmation
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Trade'
        400:
          description: invalid input, object invalid
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              error:
                properties:
                  message:
                    type: string   


  /app/users:
    get:
      description: List users registered to use the app.
      operationId: getUsers
      tags: 
      - AppIO
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        400:
          description: bad input parameter
          
    post:
      description: Register a new User to the system
      operationId: postUser
      tags: 
      - AppIO
      parameters:
      - in: body
        name: user
        description: Offer item to add to the system
        schema:
          $ref: '#/definitions/User'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists      
          
  /app/users/{userName}:
    parameters:
      - name: userName
        description: Id of user to work with
        in: path
        type: string
        required: true
    get:
      description: Gets the specified user details
      operationId: getUser
      tags: 
      - AppIO
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/User'
        400:
          description: invalid input, object invalid
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              error:
                properties:
                  message:
                    type: string       
                 
    delete:
      description: Delete the specified user from the system unless they have completed/pending transactions
      operationId: deleteUser
      tags: 
      - AppIO
      responses:
        200:
          description: item deleted confirmation
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Trade'
        400:
          description: invalid input, object invalid
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: integer
              error:
                properties:
                  message:
                    type: string   





# ChainIO Paths
  /chain/accounts:
    put:
      description: Create new account on local node.
      operationId: createAccount
      tags: 
      - ChainIO
      parameters:
      - in: body
        name: request
        description: ChainRequest object with Connection and Account properties specified.
        schema:
          $ref: '#/definitions/ChainRequest'
      responses:
        200:
          description: new account created, return account details
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        400:
          description: bad input parameter

    post:
      description: Gets list of local accounts. If Account properties provided, will attempt search
      operationId: getAccounts
      tags: 
      - ChainIO
      parameters:
      - in: body
        name: request
        description: ChainRequest object with Connection and optional Account properties specified.
        schema:
          $ref: '#/definitions/ChainRequest'
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        400:
          description: bad input parameter

          
  /chain/assets:
    post:
      description: Gets list of local assets. If Asset properties provided, will attempt search
      operationId: getAssets
      tags: 
      - ChainIO
      parameters:
      - in: body
        name: request
        description: ChainRequest object with Connection and optional Asset properties specified.
        schema:
          $ref: '#/definitions/ChainRequest'
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
        400:
          description: bad input parameter
  
#    put:
#      operationId: createAsset
#      description: Creates new Asset on local node.
#      tags: 
#      - ChainIO
#      parameters:
#      - in: body
#        name: request
#        description: ChainRequest object with Connection and optional Asset properties specified.
#        schema:
#          $ref: '#/definitions/ChainRequest'
#      responses:
#        200:
#          description: new sset created, return asset details
#          schema:
#            type: array
#            items:
#              $ref: '#/definitions/Asset'
#        400:
#          description: bad input parameter

  /chain/keys:
    post:
      description: Gets list of local HSM keys.
      operationId: getKeys
      tags: 
      - ChainIO
      parameters:
      - in: body
        name: request
        description: ChainRequest object with Connection and optional HSMKey properties specified.
        schema:
          $ref: '#/definitions/ChainRequest'
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/HSMKey'
        400:
          description: bad input parameter


  /chain/transactions:
    post:
      description: Gets list of recent transactions.
      operationId: getTransactions
      tags: 
      - ChainIO
      parameters:
      - in: body
        name: connection
        description: Connection data for Chain Node
        schema:
          $ref: '#/definitions/NodeConnection'
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionResponse'
        400:
          description: bad input parameter


  /chain/sign:
    post:
      description: sign this transaction partial
      operationId: signTransaction
      tags:
      - ChainIO
      parameters:
      - in: body
        name: request
        description: |
          Request includes Node connection details and transaction information
        schema:
          $ref: '#/definitions/ChainRequest'
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionResponse'
        400:
          description: bad input parameter


#
# Object Model Definitions
#
          
definitions:

# Models of the Application data objects
  Trade:
    type: object
    properties:
      tradeId:
        type: string
        format: int32
        example: d290f1ee
      parentId:
        type: string
        format: int32
        example: d290f1ee
      tradeDescription:
        type: string
        example: 'User A sold X asset to User B for Y Asset'
      seller:
        $ref: '#/definitions/TradeItem'
      buyer:
        $ref: '#/definitions/TradeItem'
      expiryDateTime:
        type: string
        format: date
        example: 2017-01-31T09:00:00.002Z
      transactionHex:
        type: string
      status:
        type: string
        example: Processed or Cancelled
      lastActionDate:
        type: string
        format: date
        example: 2017-01-31T09:00:00.002Z
  
  TradeItem:
    type: object
    properties:
      asset:
        $ref: '#/definitions/Asset'
      account:
        $ref: '#/definitions/Account'
      amount:
        type: number
        format: integer
        example: 100
  
  User:
    required:
    - userName
    - fullName
    - email
    properties:
      userName:
        type: string
      fullName:
        type: string
      email:
        type: string
        format: email
      telephone:
        type: string
        format: phone
      avatar:
        type: string
        format: base64 image
      password:
        type: string
        format: hashed password
        
# Models of the Chain Core message objects

  NodeConnection:
    description: Defines the remote node connection details
    required:
    - nodeURL
    - clientToken
    properties:
      nodeURL:
        type: string
        format: URL
        example: http://172.16.101.93:1999
      clientToken:
        type: string
        example: UbuntuDev:e72629518809db4f5176d084f80f2261a3f4c70e044c6339251977c79f73c4bb

  Asset:
    description: Model defining the core information of a Chain Asset
    properties:
      id:
        description: Used when referencing this asset from a remote node
        type: string
        example: 227f376b170560cc3c3243e09de3560b2ba732a9522217b3d87d0992a19e5341
      alias:
        description: Friendly unique name for the Asset. Only visible on local node
        type: string
        example:  BlockCoin
      quorum:
        description:  On Asset creation > 0, number of keys required to sign. Must be <= keys.length
        type: number
      tags:
        description: The tag is an optional key-value field used for arbitrary storage or queries. This data is local to the Chain Core and not visible in the blockchain.
        type: object
      definition:
        description: The definition is global data about the asset that is visible in the blockchain.
        type: object
      keys:
        type: array
        items:
          $ref: '#/definitions/HSMKey'

  Account:
    description: Model defining the core information of a Chain Account
    properties:
      id:
        type: string
        example: acc0RSDADNVG0804
      alias:
        description: Friendly unique name for the Account. Only visible on local node
        type: string
        example:  BobAccount1
      quorum:
        description: On Account creation > 0, number of keys required to sign. Must be <= keys.length
        type: number
      tags:
        description: The tag is an optional key-value field used for arbitrary storage or queries. This data is local to the Chain Core and not visible in the blockchain.
        type: object
      keys:
        description: When used, array length must >= 1
        type: array
        items:
          $ref: '#/definitions/HSMKey'
      controlProgram:
        description: Used when paying to this account from a remote node.
        type: string
        example: 766baa20f19b55122a0404313b57fbdab7b59548a311dcf2fcf538f1d7cc025ca625e52b5151ad696c00c0
        
  HSMKey:
    description: Model defining the properties of Chain HSM Key
    properties:
      alias:
        description: Freindly name for the key. Usually '{AccountAlias}Key'
        type: string
      rootXpub:
        type: string
        example: 4abb21e69072a7b17357cc514847f556afd6e007a7c92ef4f898208c1103212aef4d36e42441888cd25d5e7d61a13a2811777c0b2f25ce66abb898141abe8f4a
      accountXpub:
        type: string
        example: 48764b4efe18bbf1c3ad9f60ab60a5eb6f6a8d72d560bdf07e261d4a707cd50244db49b4e64547a2686bc3eb282815bf1337cab4a3343ea1c95948b81e6f3df0
      accountDerivationPath:
        type: array
        items:
          type: string
          example: AQYAAAAAAAAA
          
  Transaction:
    description: Model defining the parameters of a Spend transaction.
    properties:
      spend:
        $ref: '#/definitions/TradeItem'
      control:
        $ref: '#/definitions/TradeItem'
      allowAdditionalActions:
        type: string
        example: yes or no
      baseTransaction:
        type: string
      referenceData:
        type: object
  
  ChainRequest:
    description: Model used to search or create new objects on a Chain node
    required:
    - connection
    properties:
      connection:
        $ref: '#/definitions/NodeConnection'
      account:
        $ref: '#/definitions/Account'
      asset:
        $ref: '#/definitions/Asset'
      transaction:
        $ref: '#/definitions/Transaction'
      hsmkey:
        type: array
        items:
          $ref: '#/definitions/HSMKey'


# Models of Chain Core response objects

  TransactionResponse:
    properties:
      id: 
        type: string
        example: af3c8f3e42f35072ab1286225e2b3cd73552b9ce3a3cf3cd936f6e3a9d3f40df
      timestamp:
        type: string
        format: date
        example: 2017-02-09T14:20:24Z
      block_id:
        type: string
      block_height:
        type: integer
      position:
        type: integer
      reference_data:
        type: object
        format: json
      is_local:
        type: string
        example: no
      inputs:
        type: array
        items:
          $ref: '#/definitions/TransactionInputSpend'
      outputs:
        type: array
        items:
          $ref: '#/definitions/TransactionOutputControl'

  TransactionInputIssue:
    properties:
      type:
        type: string
      asset_id:
        type: string
      asset_definition:
        type: string
      asset_tags:
        type: string
      asset_is_local:
        type: string
      amount:
        type: integer
      issuance_program:
        type: string
      reference_data:
        type: object
      is_local:
        type: string
      
  TransactionInputSpend:
    properties:
      type:
        type: string
      asset_id:
        type: string
      asset_alias:
        type: string
      asset_definition:
        type: object
      asset_tags:
        type: object
      asset_is_local:
        type: string
        example: yes
      amount:
        type: integer
      spent_output:
        type: object
      account_id:
        type: string
      account_alias:
        type: string
      account_tags:
        type: object
      reference_data:
        type: object
      is_local:
        type: string
        example: yes

  TransactionOutputControl:
    properties:
      type:
        type: string
      purpose:
        type: string
        example: receive or change
      position:
        type: integer
      asset_id:
        type: string
      asset_definition:
        type: object
      asset_tags:
        type: object
      asset_is_local:
        type: string
      amount:
        type: integer
      account_id:
        type: string
      account_alias:
        type: string
      account_tags:
        type: object
      control_program:
        type: string
      reference_data:
        type: object
      is_local:
        type: string
        example: no
      
